{"version":3,"sources":["helpers/config.js","helpers/creators.js","helpers/storage.js","helpers/access.jsx","helpers/index.js","constants/queries.js","constants/access.js","constants/storage.js","constants/index.js","graphql/queries.js","graphql/index.js","components/pages/Users/styles.js","components/pages/Users/index.js","components/pages/Users/component.jsx","Router.jsx","theme/colors.js","theme/size.js","Client.js","Root.jsx","index.js"],"names":["config","process","creator","fn","query","opts","arguments","length","undefined","createQuery","useSubscription","useQuery","useMutation","useLazyQuery","Storage","storage","Object","classCallCheck","this","key","getItem","value","setItem","removeItem","clear","index","localStorage","useAccess","permission","ACCESS","GUEST","_getAccess","getAccess","isLoaded","hasPermission","define","useEffect","defaultValues","deepmerge","hasAccess","apply","__webpack_require__","d","__webpack_exports__","access_useAccess","USERS","gql","_templateObject","permissions","users:read","LOCAL_STORAGE","TOKEN","queries_namespaceObject","access_namespaceObject","getUsers","_helpers__WEBPACK_IMPORTED_MODULE_0__","_constants__WEBPACK_IMPORTED_MODULE_1__","QUERY","_mutations__WEBPACK_IMPORTED_MODULE_0__","o","_queries__WEBPACK_IMPORTED_MODULE_1__","ErrorMessage","styled","div","Component","_getUsers","data","loading","error","_useAccess","go:read","react_default","a","createElement","users","docs","map","_ref","username","email","id","Router","react_router_dom","react_router","Fragment","exact","path","component","Users","COLORS","SIZE","REACT_APP_API","REACT_APP_API_WS","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","authLink","setContext","_","headers","token","_objectSpread","authorization","concat","linkSub","split","_ref2","definition","getMainDefinition","kind","operation","link","cache","InMemoryCache","client","ApolloClient","guest","Root","react_common_esm","styled_components_browser_esm","theme","index_es","src_Router","ReactDOM","render","src_Root","document","getElementById","OfflinePluginRuntime"],"mappings":"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","file":"static/js/main.c3e21ed3.chunk.js","sourcesContent":["export const config = process.env\n","import { useSubscription, useLazyQuery, useMutation, useQuery } from '@apollo/react-hooks'\n\nconst creator = fn => {\n  return query => {\n    return (opts = {}) => fn(query, opts)\n  }\n}\n\nexport const createSubscription = creator(useSubscription)\nexport const createQuery = creator(useQuery)\nexport const createMutation = creator(useMutation)\nexport const createLazyQuery = creator(useLazyQuery)\n","class Storage {\n  constructor (storage) {\n    this.storage = storage\n  }\n\n  get (key) {\n    return this.storage.getItem(key)\n  }\n\n  set (key, value) {\n    return this.storage.setItem(key, value)\n  }\n\n  remove (key) {\n    return this.storage.removeItem(key)\n  }\n\n  clear () {\n    this.storage.clear()\n  }\n\n  key (index) {\n    return this.storage.key(index)\n  }\n\n  get length () {\n    return this.storage.length\n  }\n}\n\nexport const storage = new Storage(localStorage)\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect } from 'react'\nimport deepmerge from 'deepmerge'\nimport { useAccess as getAccess } from 'react-access-control'\nimport { ACCESS } from '@/constants'\n\nexport const useAccess = (permission = ACCESS.GUEST) => {\n  const { isLoaded, hasPermission, define } = getAccess()\n  useEffect(() => {\n    const defaultValues = deepmerge(ACCESS.GUEST, permission)\n\n    define(defaultValues)\n  }, [])\n\n  const hasAccess = (...params) => hasPermission(...params)\n\n  return {\n    isLoaded,\n    hasAccess,\n  }\n}\n","export * from './config'\nexport * from './creators'\nexport * from './storage'\nexport * from './access.jsx'\n","import gql from 'graphql-tag'\n\nexport const USERS = gql`\n  query {\n    users(offset: 0, limit: 10) {\n      docs {\n        id\n        username\n        email\n      }\n    }\n  }\n`\n","export const GUEST = {\n  permissions: {\n    'users:read': true,\n  },\n}\n","export const LOCAL_STORAGE = {\n  TOKEN: 'token',\n}\n","import * as QUERY from './queries'\nimport * as MUTATIONS from './mutations'\nimport * as ACCESS from './access'\nexport * from './storage'\n\nexport { QUERY, MUTATIONS, ACCESS }\n","import { createQuery } from '@/helpers'\nimport { QUERY } from '@/constants'\n\nexport const getUsers = createQuery(QUERY.USERS)\n","export * from './mutations'\nexport * from './queries'\n","import styled from 'styled-components'\n\nexport const ErrorMessage = styled.div`\n  font-size: 2rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n`\n","import Component from './component'\n\nexport default Component\n","import React from 'react'\nimport { getUsers } from '@/graphql'\nimport { useAccess } from '@/helpers'\nimport { ErrorMessage } from './styles'\n\nconst Component = () => {\n  const { data, loading, error } = getUsers()\n\n  const { isLoaded, hasAccess } = useAccess({\n    permissions: {\n      'go:read': true,\n      'users:read': true,\n    },\n  })\n\n  const usersAccess = hasAccess('users:read')\n\n  if (!usersAccess) {\n    return <div>No access...</div>\n  }\n\n  if (loading && isLoaded) {\n    return <div>Loading...</div>\n  }\n\n  if (error) {\n    return <ErrorMessage>Server is not available</ErrorMessage>\n  }\n\n  const users = data.users.docs.map(({ username, email, id }) => {\n    return (\n      <div key={id}>\n        <h2>{username}</h2>\n        <h4>{email}</h4>\n      </div>\n    )\n  })\n\n  return <div>{users}</div>\n}\n\nexport default Component\n","import React from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport { Users } from '@/components/pages'\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <>\n          <Route exact path=\"/\"\n            component={Users} />\n        </>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","export const COLORS = {}\n","export const SIZE = {}\n","import { split } from 'apollo-link'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\nimport { config } from '@/helpers'\nimport { LOCAL_STORAGE } from '@/constants'\n\nconst { REACT_APP_API, REACT_APP_API_WS } = config\n\nconst httpLink = new HttpLink({\n  uri: REACT_APP_API,\n})\n\nconst wsLink = new WebSocketLink({\n  uri: REACT_APP_API_WS,\n  options: {\n    reconnect: true,\n  },\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(LOCAL_STORAGE.TOKEN)\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\nconst linkSub = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query)\n    return definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n  },\n  wsLink,\n  httpLink,\n)\n\nconst link = authLink.concat(linkSub)\n\nconst cache = new InMemoryCache()\n\nexport const client = new ApolloClient({\n  link,\n  cache,\n})\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { AccessProvider } from 'react-access-control'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Router from '@/Router'\nimport * as theme from '@/theme'\nimport { client } from './Client'\n\nconst guest = {\n  permissions: {\n    'users:read': true,\n  },\n}\n\nconst Root = () => {\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <AccessProvider value={guest}>\n          <Router />\n        </AccessProvider>\n      </ThemeProvider>\n    </ApolloProvider>\n  )\n}\n\nexport default Root\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as OfflinePluginRuntime from 'offline-plugin/runtime'\nimport Root from '@/Root'\n\nimport 'reset-css'\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nOfflinePluginRuntime.install()\n"],"sourceRoot":""}